const tasks = require('./tasks');
const liteflow = new (require('@liteflow/service'))();

// how to generate seed - https://iota.guide/seed/how-to-generate-iota-wallet-seed/
// good article to read - https://brightinventions.pl/blog/iota-hello-world/

//// if you haven't wallet address yet
// iota.api.getNewAddress(seedSender, (error, address) => {
//     if (error) {
//         console.error('getNewAddress error', error)
//     } else {
//         console.log('new address generated: ' + address)
//     }
//  })

liteflow.listenTask({
    // handler function of taskX
    sendTransaction: tasks.sendTransaction,
    sendMessage: tasks.sendMessage,
    readMessage: tasks.readMessage

  }).on('error', (error) => {
      console.error(error)
    })











// const s = iota.utils.fromTrytes(``.slice(0,-1))
// console.log(s);

// const Depth = 3 // constant defined by IOTA - how deep to look for the tips in the Tangle
// const MinWeightMagnitude = 14 // constant defined by IOTA - the difficulty of PoW

// const transfers = [
//     {
//         // where are we sending the transaction to?
//         'address': addrReciever,
        
//         // how many tokens are we transferring?
//         'value': 0,
        
//         // do we want to comment on this transaction?
//         'message': iota.utils.toTrytes('new trans'),
//         "tag": iota.utils.toTrytes('test')
//     }
// ]

// const options = {
//     // addresses of the wallets we're using to fund this transfer
//     inputs: []
// }

// console.log(iota.utils.transactionTrytes(transfers);

// iota.api.sendTransfer(seedSender, Depth, MinWeightMagnitude, transfers, (error, transactions) => {
//   if (error) {
//      console.error('sendTransfer error', error)
//   } else {
//      console.log('transactions sent!', transactions)
//   }
// })

// iota.api.getAccountData(seedReciver, {security: 2}, (err, res) => {
//     if (!err){
//         console.log(res);
//         console.log(res.transfers);

//     }
// })

